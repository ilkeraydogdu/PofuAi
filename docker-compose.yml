version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://marketplace:marketplace123@postgres:5432/marketplace_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./storage:/app/storage
    networks:
      - marketplace-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: marketplace-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=marketplace123
      - POSTGRES_DB=marketplace_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - marketplace-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U marketplace"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: marketplace-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - marketplace-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery worker for background tasks
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace-celery
    restart: unless-stopped
    command: celery -A core.tasks.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://marketplace:marketplace123@postgres:5432/marketplace_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - marketplace-network

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace-celery-beat
    restart: unless-stopped
    command: celery -A core.tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://marketplace:marketplace123@postgres:5432/marketplace_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - marketplace-network

  # Flower for Celery monitoring
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace-flower
    restart: unless-stopped
    command: celery -A core.tasks.celery_app flower --port=5555
    environment:
      - DATABASE_URL=postgresql://marketplace:marketplace123@postgres:5432/marketplace_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    networks:
      - marketplace-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: marketplace-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./storage/uploads:/app/storage/uploads:ro
    depends_on:
      - app
    networks:
      - marketplace-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: marketplace-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@marketplace.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - marketplace-network
    profiles:
      - tools

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: marketplace-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - marketplace-network
    profiles:
      - tools

  # Elasticsearch for search functionality (optional)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: marketplace-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - marketplace-network
    profiles:
      - search

  # Kibana for Elasticsearch visualization (optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: marketplace-kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - marketplace-network
    profiles:
      - search

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  marketplace-network:
    driver: bridge