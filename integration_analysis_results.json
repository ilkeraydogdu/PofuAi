{
  "timestamp": "2025-07-29T14:46:46.879622",
  "marketplace_integrations": {
    "trendyol": {
      "name": "Trendyol",
      "module": "trendyol_marketplace_api",
      "class": "TrendyolMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "check_batch_request_result",
        "create_product",
        "get_brand_by_name",
        "get_brands",
        "get_cargo_companies",
        "get_categories",
        "get_category_attributes",
        "get_order",
        "get_orders",
        "get_product",
        "get_products",
        "get_returns",
        "get_settlement_report",
        "get_shipment_packages",
        "get_supplier_info",
        "get_webhook_url",
        "set_webhook_url",
        "ship_order",
        "test_connection",
        "update_order_status",
        "update_product",
        "update_stock_price"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "n11": {
      "name": "N11",
      "module": "n11_marketplace_api",
      "class": "N11MarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "accept_order",
        "delete_product",
        "get_account_info",
        "get_category_attributes",
        "get_cities",
        "get_districts",
        "get_order_detail",
        "get_order_list",
        "get_product",
        "get_product_list",
        "get_shipment_companies",
        "get_shipment_template",
        "get_sub_categories",
        "get_top_level_categories",
        "reject_order",
        "save_product",
        "ship_order",
        "test_connection",
        "update_stock_by_stock_code"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "hepsiburada": {
      "name": "Hepsiburada",
      "module": "hepsiburada_marketplace_api",
      "class": "HepsiburadaMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "accept_order",
        "accept_return",
        "bulk_update_inventory",
        "bulk_update_products",
        "create_product",
        "delete_product",
        "delete_webhook",
        "deliver_order",
        "get_brands",
        "get_cargo_companies",
        "get_categories",
        "get_category_attributes",
        "get_claim_addresses",
        "get_integration_status",
        "get_inventory_report",
        "get_listing_quality_score",
        "get_merchant_info",
        "get_order",
        "get_orders",
        "get_performance_metrics",
        "get_product",
        "get_products",
        "get_return_report",
        "get_returns",
        "get_sales_report",
        "get_shipping_addresses",
        "get_webhooks",
        "register_webhook",
        "reject_order",
        "reject_return",
        "search_brand",
        "ship_order",
        "test_connection",
        "update_integration_settings",
        "update_product",
        "update_stock_price"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "gittigidiyor": {
      "name": "GittiGidiyor",
      "module": "gittigidiyor_marketplace_api",
      "class": "GittiGidiyorMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "calculate_cargo_price",
        "change_product_status",
        "create_promotion",
        "delete_product",
        "delete_promotion",
        "format_gg_datetime",
        "get_cargo_companies",
        "get_categories",
        "get_category_path",
        "get_category_specs",
        "get_message_detail",
        "get_messages",
        "get_payment_options",
        "get_product",
        "get_product_statistics",
        "get_products",
        "get_promotions",
        "get_sale_detail",
        "get_sale_invoice",
        "get_sales",
        "get_stock",
        "get_store_statistics",
        "get_user_info",
        "insert_product",
        "search_category",
        "send_message",
        "set_payment_options",
        "ship_sale",
        "test_connection",
        "update_product",
        "update_promotion",
        "update_stock",
        "update_user_info",
        "validate_product_data"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "çiçeksepeti": {
      "name": "Çiçeksepeti",
      "module": "ciceksepeti_marketplace_api",
      "class": "CiceksepetiMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "bulk_update_stock",
        "calculate_shipping_cost",
        "cancel_order",
        "create_discount",
        "create_occasion_product",
        "create_product",
        "delete_product",
        "format_cs_datetime",
        "get_brand",
        "get_brands",
        "get_campaigns",
        "get_cargo_companies",
        "get_categories",
        "get_category",
        "get_category_attributes",
        "get_customer",
        "get_customer_orders",
        "get_customers",
        "get_delivery_options",
        "get_inventory_report",
        "get_occasion_by_date",
        "get_order",
        "get_orders",
        "get_product",
        "get_product_performance",
        "get_products",
        "get_sales_report",
        "get_special_occasions",
        "get_stock_movements",
        "search_brands",
        "ship_order",
        "test_connection",
        "update_order_status",
        "update_price",
        "update_product",
        "update_stock",
        "validate_product_data"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "amazon": {
      "name": "Amazon",
      "module": "amazon_sp_api",
      "class": "AmazonSPAPI",
      "status": "partial",
      "importable": true,
      "instantiable": false,
      "has_config": true,
      "production_ready": false,
      "methods": [],
      "errors": [
        "Instantiation error: AmazonSPAPI.__init__() missing 1 required positional argument: 'refresh_token'"
      ],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "ebay": {
      "name": "eBay",
      "module": "ebay_marketplace_api",
      "class": "EbayMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "add_item",
        "complete_sale",
        "create_fulfillment_policy",
        "create_inventory_location",
        "create_offer",
        "create_or_replace_inventory_item",
        "create_payment_policy",
        "create_return_policy",
        "delete_inventory_item",
        "delete_offer",
        "end_item",
        "format_ebay_datetime",
        "get_categories",
        "get_category_features",
        "get_fulfillment_policies",
        "get_inventory_item",
        "get_inventory_items",
        "get_inventory_locations",
        "get_item",
        "get_items_by_item_group",
        "get_listing_fees",
        "get_my_ebay_selling",
        "get_offer",
        "get_offers",
        "get_order",
        "get_orders",
        "get_payment_policies",
        "get_return_policies",
        "get_shipping_fulfillments",
        "get_site_id",
        "publish_offer",
        "revise_item",
        "search_items",
        "ship_order",
        "test_connection",
        "update_offer",
        "withdraw_offer"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "etsy": {
      "name": "Etsy",
      "module": "etsy_marketplace_api",
      "class": "EtsyMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "create_draft_listing",
        "create_receipt_shipment",
        "create_shop_section",
        "create_shop_shipping_profile",
        "delete_listing",
        "delete_listing_image",
        "delete_shop_section",
        "delete_shop_shipping_profile",
        "get_access_token",
        "get_authorization_url",
        "get_buyer_taxonomy_nodes",
        "get_listing",
        "get_listing_images",
        "get_listing_inventory",
        "get_listings_by_shop",
        "get_me",
        "get_payments",
        "get_receipt",
        "get_reviews_by_listing",
        "get_reviews_by_shop",
        "get_seller_taxonomy_nodes",
        "get_shop",
        "get_shop_by_owner_user_id",
        "get_shop_payment_account_ledger_entries",
        "get_shop_receipts",
        "get_shop_sections",
        "get_shop_shipping_profiles",
        "get_shop_stats",
        "get_token_scopes",
        "get_user",
        "ping",
        "refresh_access_token",
        "update_listing",
        "update_listing_inventory",
        "update_receipt",
        "update_shop",
        "update_shop_section",
        "update_shop_shipping_profile",
        "upload_listing_image",
        "validate_credentials"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "aliexpress": {
      "name": "AliExpress",
      "module": "aliexpress_marketplace_api",
      "class": "AliExpressMarketplaceAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "create_logistics_order",
        "create_product",
        "create_promotion",
        "get_access_token",
        "get_categories",
        "get_category_attributes",
        "get_freight_template",
        "get_logistics_services",
        "get_order_details",
        "get_order_list",
        "get_product_analytics",
        "get_product_details",
        "get_product_list",
        "get_promotion_list",
        "get_store_analytics",
        "get_store_categories",
        "get_store_info",
        "get_supported_countries",
        "refresh_access_token",
        "ship_order",
        "track_logistics",
        "update_product",
        "update_product_price",
        "update_product_stock",
        "validate_credentials"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    }
  },
  "payment_gateways": {
    "i̇yzico": {
      "name": "İyzico",
      "module": "iyzico_payment_api",
      "class": "IyzicoPaymentAPI",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "has_config": true,
      "production_ready": false,
      "methods": [
        "cancel_payment",
        "complete_3ds_payment",
        "create_3ds_payment",
        "create_card",
        "create_payment",
        "create_sub_merchant",
        "delete_card",
        "get_test_cards",
        "initialize_checkout_form",
        "list_cards",
        "refund_payment",
        "retrieve_bin",
        "retrieve_checkout_form_result",
        "retrieve_installment_info",
        "retrieve_payment",
        "retrieve_sub_merchant",
        "test_connection",
        "update_sub_merchant"
      ],
      "features": [
        "cancel_payment",
        "complete_3ds_payment",
        "create_3ds_payment",
        "create_payment",
        "initialize_checkout_form",
        "refund_payment",
        "retrieve_checkout_form_result",
        "retrieve_payment"
      ],
      "errors": [],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "paytr": {
      "name": "PayTR",
      "module": "paytr_payment_api",
      "class": "PayTRPaymentAPI",
      "status": "partial",
      "importable": true,
      "instantiable": false,
      "has_config": true,
      "production_ready": false,
      "methods": [],
      "features": [],
      "errors": [
        "Instantiation error: PayTRPaymentAPI.__init__() takes from 1 to 2 positional arguments but 3 were given"
      ],
      "warnings": [
        "Using demo credentials"
      ]
    },
    "stripe": {
      "name": "Stripe",
      "module": "stripe_payment_api",
      "class": "StripePaymentAPI",
      "status": "partial",
      "importable": true,
      "instantiable": false,
      "has_config": true,
      "production_ready": false,
      "methods": [],
      "features": [],
      "errors": [
        "Instantiation error: StripePaymentAPI.__init__() takes 2 positional arguments but 3 were given"
      ],
      "warnings": [
        "Using demo credentials"
      ]
    }
  },
  "services": {
    "güvenlik_servisi": {
      "name": "Güvenlik Servisi",
      "module": "security_service",
      "class": "SecurityService",
      "status": "failed",
      "importable": false,
      "instantiable": false,
      "methods": [],
      "errors": [
        "Import error: No module named 'user_agents'"
      ],
      "warnings": []
    },
    "seo_servisi": {
      "name": "SEO Servisi",
      "module": "seo_service",
      "class": "SEOService",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "analyze_seo_performance",
        "connection",
        "dispatch_event",
        "error_response",
        "generate_robots_txt",
        "generate_seo_data",
        "generate_sitemap",
        "generate_structured_data",
        "get_config",
        "get_container",
        "get_event_dispatcher",
        "get_logger",
        "get_service_info",
        "get_validator",
        "handle_exception",
        "is_running",
        "listen_event",
        "log",
        "start",
        "stop",
        "submit_to_search_engines",
        "success_response",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    },
    "performans_optimizasyonu": {
      "name": "Performans Optimizasyonu",
      "module": "performance_optimizer",
      "class": "PerformanceOptimizer",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "cleanup_memory",
        "connection",
        "dispatch_event",
        "error_response",
        "get_config",
        "get_container",
        "get_event_dispatcher",
        "get_logger",
        "get_performance_report",
        "get_service_info",
        "get_validator",
        "handle_exception",
        "is_running",
        "listen_event",
        "log",
        "monitor_system_performance",
        "optimize_database_queries",
        "optimize_images_async",
        "optimize_response",
        "start",
        "stop",
        "success_response",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    },
    "gelişmiş_session": {
      "name": "Gelişmiş Session",
      "module": "advanced_session_service",
      "class": "AdvancedSessionService",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "create_session",
        "delete_cookie",
        "destroy_all_user_sessions",
        "destroy_session",
        "dispatch_event",
        "error_response",
        "get_config",
        "get_container",
        "get_cookie",
        "get_event_dispatcher",
        "get_logger",
        "get_service_info",
        "get_session",
        "get_session_analytics",
        "get_user_sessions",
        "get_validator",
        "handle_exception",
        "is_running",
        "listen_event",
        "log",
        "set_cookie",
        "start",
        "stop",
        "success_response",
        "update_session",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    },
    "gelişmiş_raporlama": {
      "name": "Gelişmiş Raporlama",
      "module": "advanced_reporting_service",
      "class": "AdvancedReportingService",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "connection",
        "dispatch_event",
        "error_response",
        "export_report",
        "generate_custom_report",
        "generate_sales_analysis_report",
        "generate_system_performance_report",
        "generate_user_behavior_report",
        "get_config",
        "get_container",
        "get_event_dispatcher",
        "get_logger",
        "get_service_info",
        "get_user_purchase_prediction",
        "get_validator",
        "handle_exception",
        "is_running",
        "listen_event",
        "log",
        "start",
        "stop",
        "success_response",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    },
    "cache_servisi": {
      "name": "Cache Servisi",
      "module": "cache_service",
      "class": "CacheService",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "clear",
        "decrement",
        "delete",
        "dispatch_event",
        "error_response",
        "flush",
        "get",
        "get_config",
        "get_container",
        "get_event_dispatcher",
        "get_hit_ratio",
        "get_logger",
        "get_pattern",
        "get_service_info",
        "get_validator",
        "handle_exception",
        "has",
        "increment",
        "is_running",
        "listen_event",
        "log",
        "remember",
        "set",
        "start",
        "stop",
        "success_response",
        "tags",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    },
    "mail_servisi": {
      "name": "Mail Servisi",
      "module": "mail_service",
      "class": "MailService",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "dispatch_event",
        "error_response",
        "get_available_templates",
        "get_config",
        "get_container",
        "get_event_dispatcher",
        "get_logger",
        "get_service_info",
        "get_validator",
        "handle_exception",
        "is_running",
        "listen_event",
        "log",
        "send",
        "send_contact_form_email",
        "send_notification_email",
        "send_password_reset_email",
        "send_to_multiple",
        "send_welcome_email",
        "send_welcome_email_with_password",
        "start",
        "stop",
        "success_response",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    },
    "bildirim_servisi": {
      "name": "Bildirim Servisi",
      "module": "notification_service",
      "class": "NotificationService",
      "status": "working",
      "importable": true,
      "instantiable": true,
      "methods": [
        "add_channel",
        "dispatch_event",
        "error_response",
        "get_config",
        "get_container",
        "get_event_dispatcher",
        "get_logger",
        "get_service_info",
        "get_validator",
        "handle_exception",
        "is_running",
        "listen_event",
        "log",
        "send",
        "send_to_user",
        "send_to_users",
        "start",
        "stop",
        "success_response",
        "validate_data"
      ],
      "errors": [],
      "warnings": []
    }
  },
  "errors": [],
  "warnings": [],
  "summary": {
    "total_integrations": 20,
    "working": 16,
    "partial": 3,
    "failed": 1,
    "working_percentage": 80.0,
    "production_ready": 0,
    "demo_credentials": 12
  }
}